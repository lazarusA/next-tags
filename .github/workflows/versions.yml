name: Generate versions.json

on:
  workflow_run:
    workflows: ["Publish main"]
    types:
      - completed

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0

      - name: Generate versions.json
        id: generate
        run: |
          set -euo pipefail

          # List top-level directories (excluding .git)
          DIRS=$(find . -maxdepth 1 -mindepth 1 -type d -printf '%f\n' | grep -v '^.git$' || true)

          # Extract version-style dirs and detect "latest"
          TAGS=$(echo "$DIRS" | grep -E '^v[0-9]+' || true)
          HAS_LATEST=$(echo "$DIRS" | grep -x 'latest' || true)

          # Sort semantic versions descending
          if [ -n "$TAGS" ]; then
            SORTED=$(echo "$TAGS" | sort -V -r)
            VERSIONS_ARRAY=$(printf '%s\n' "$SORTED" | jq -R -s -c 'split("\n")[:-1]')
          else
            VERSIONS_ARRAY='[]'
          fi

          # Put 'latest' first if exists
          if [ -n "$HAS_LATEST" ]; then
            VERSIONS_JSON=$(jq -c --argjson versions "$VERSIONS_ARRAY" '["latest"] + $versions' <<< "$VERSIONS_ARRAY")
          else
            VERSIONS_JSON=$VERSIONS_ARRAY
          fi

          echo "$VERSIONS_JSON" > versions.json
          echo "versions.json content:"
          cat versions.json

      - name: Commit & push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add versions.json

          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes in versions.json, skipping commit."
            exit 0
          fi

          git commit -m "Update versions.json"
          git push origin gh-pages